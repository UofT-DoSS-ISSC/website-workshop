[["index.html", "ISSC: Building a personal website workshop series 1 Introduction 1.1 Why make a website? 1.2 What we’re going to do during the workshop series", " ISSC: Building a personal website workshop series Liza Bolton Last updated 2021-06-03 1 Introduction There are many, many ways to make a website these days. This workshop series aims to help you make a personal website using the distill package.This is just ONE way that is used by a lots of folks in statistics and that leverages your existing R and R Markdown skills. It is reasonably beginner friendly and creates a professional looking website. Note: If you already have a personal website, sessions 2 and/or 3 may still be of interest to you. You can attend as many or as few of these sessions as you would like. 1.1 Why make a website? There are many reasons why you might want or need a website (which might also be why there are so many ways to make one!). I’m going to assume your main motivations might be some subset of the below: You want to make it easier for employers/prospective supervisors to find examples of your analysis and communication work, your projects (i.e., your portfolio). You want to have a home for sharing your side projects with folks with similar interests. You want to have a hub from which to share your bio, CV other profiles/links etc., a detailed digital business card of sorts. It sounds fun! At the core of why I’m imaging you’re interested is because on some level you know that communication is important. You want to communicate to the world about who you are and what you can do. Building a website can be useful both as the medium for sharing, but also as a method of exploring and reflecting on how you want to communicate about yourself to the world. For this reason, this series aims to combine the coding and tools aspect, with other tasks around writing and reflection, so that once you have a website, you’ll also be clear on your purpose for it, how it should look and feel, and have some things to put on it. 1.2 What we’re going to do during the workshop series Get set up with R/RStudio/Git and GitHub (if not already) Build a basic landing page website with postcards Create a multi-paged paged website with distill Begin to develop an aesthetic for your \"‘personal brand’ 1 Learn some basic ways to edit the look and feel of a site with CSS Set up and post a first blog post Develop and polish professional content for your website and blog Connect to additional U of T resources that can help you develop your professional digital presence (TBC) Do we hate the concept of ‘personal brand’? I think there is some value in thinking about how we make it easier for the world to understand us…but there is so much grossness with it too…↩︎ "],["prereqs.html", "2 What you need to do before the first session 2.1 Decide if this is the right way of making a website for you 2.2 Technical tasks", " 2 What you need to do before the first session 2.1 Decide if this is the right way of making a website for you In order to make the most of this series, you should think about what the purpose for your personal website is going to be. Is it to have a basic hub for your professional links? (A bit like the ‘linktree’ links you might see on Instagram.) Is it to share your technical portfolio and/or demonstrate your communication skills with simple blogs? Especially good if R is one of the main languages you’ll be using. Also works with Python with the reticulate package. If yes, to the above, this workshop series using distill is probably perfect for you. If you want a more complicated and customizable site checkout blogdown (still using an R package) or Bootstrap (HTML/CSS) or if you need to support e-commerce, you might just want to go find which YouTuber you like has a Squarespace sponsorship this week… 2.2 Technical tasks To be able to engage fully with this series of workshops, you will need to have completed the steps in the Installation part of https://happygitwithr.com/. This a great a resource. I also STRONGLY recommend that you try to follow the instructions in Chapter 10 so you can easily set up your new project and connect it to GitHub. Register a GitHub account Get GitHub for education https://education.github.com/ so you can have free private repositories Install or upgrade R and RStudio on your local machine Install Git Introduce yourself to Git Cache your credentials For the easiest experience with website building and updating, you want to be able to push to a GitHub repo from either the Git pane in RStudio or using the terminal (which you can also access from RStudion, tab next to the console pane). 2.2.1 What is GitHub and why do you want it? We’re suggesting that if you haven’t already, you get yourself setup with GitHub as a key component of your portfolio building strategy, regardless of your plans to make a website with this series or otherwise. It will supercharge your version control and your ability to collaborate with others AND provides a FREE way to host a website. Jenny Bryan has a great introduction in her Happy Git with R, so I’ll let her explain the rest: Git is a version control system. Its original purpose was to help groups of developers work collaboratively on big software projects. Git manages the evolution of a set of files – called a repository – in a sane, highly structured way. If you have no idea what I’m talking about, think of it as the “Track Changes” features from Microsoft Word on steroids. Git has been re-purposed by the data science community. In addition to using it for source code, we use it to manage the motley collection of files that make up typical data analytical projects, which often consist of data, figures, reports, and, yes, source code. A solo data analyst, working on a single computer, will benefit from adopting version control. But not nearly enough to justify the pain of installation and workflow upheaval. There are much easier ways to get versioned back ups of your files, if that’s all you’re worried about. In my opinion, for new users, the pros of Git only outweigh the cons when you factor in the overhead of communicating and collaborating with other people. Who among us does not need to do that? Your life is much easier if this is baked into your workflow, as opposed to being a separate process that you dread or neglect.” - Jenny Bryan, Happy Git with R, Section 1.1: Why Git? https://happygitwithr.com/big-picture.html There is also lots of great practical professional advice in here, too, like “Pick a username you will be comfortable revealing to your future boss.” Save gamerangel420 for Reddit. (The first example I thought of I had to change…it actually was someone’s Reddit username) Work through Jenny Bryan’s awesome ‘Happy Git with R’ Check out the DoSS Toolkit lesson “Git outta here” Sign up for GitHub Education Student Developer Pack (access to hundreds of dollars worth of tools and training AND a GitHub pro account while you’re a student) "],["session-1-build-a-simple-website-with-distill.html", "3 Session 1: Build a simple website with Distill 3.1 To do before the workshop 3.2 Workshop instructions 3.3 Other tips/resources 3.4 Setting up a custom domain 3.5 Post-workshop tasks", " 3 Session 1: Build a simple website with Distill 3.1 To do before the workshop Complete all the steps in the prerequisites section. Decide if you want to buy a domain name (see appendix). Buying a domain name is totally optional, and you don’t have to decide now. But, if you know you want to, you might as well get set up now. Decide what links to external things you want to share on your website. Have them easily accessible to copy and paste. GitHub? LinkedIn? Twitter? Choose a profile picture for your website. A headshot with a simple background is best. If you don’t have one/don’t want to show a photo, you may want to find some other form of an avatar or placeholder picture. Have the PNG or JPEG easily available to copy to the file you’ll need. Download the R Markdown cheat sheet and pay special attention to the ‘Pandoc’s Markdown’ section on the lefthand side of the second page. Install the below R packages. I.e., copy and paste the below code into your R console and run it. If you’re not sure what this means or how to do it, come talk to use during a TidyTuesday and Talk session (Tuesdays, from 2:00 to 3:00 p.m. ET, on Zoom, see the Events list) install.packages(&#39;postcards&#39;) # for landing page install.packages(&#39;distill&#39;) # for multipage site install.packages(&#39;usethis&#39;) # for easy connection to Git and GitHub 3.1.1 Thank you, Rohan! Major credit to Prof. Rohan Alexander for his teaching notes about making a website. You can find them at: https://www.tellingstorieswithdata.com/interactive-communication.html#making-a-website His personal website is also made with distill, https://rohanalexander.com/. 3.2 Workshop instructions 3.2.1 Landing page with postcards Let’s start with the most basic thing we can do, create a landing page with a brief bio and some key links. It is a bit like a business card for the digital age. This page can later become the home page of your website, or you might find you want to do something more customized. Make sure you have installed packages you needed to. Create a new R project using the postcard template: ‘File -&gt; New Project -&gt; New Directory -&gt; Postcards Website.’. Choose a sensible location for this project to live on your computer. I’d recommend just calling this something like ‘task1’. Pick a theme, I’d recommend trying ‘trestles’ for now, but you can see all the different ‘looks’ here (scroll down). Choose ‘Open in new session’, just to be safe. Run file.create('.nojekyll') in your console. It will later tell GitHub something about how not to build your site. Open the ‘index.Rmd’ file and Knit it to View what it looks like. Change the title to your name, add your photo to the folder you’re working in and change the image to that. Update the links with whatever you want to include. Update the text below the YAML. You might like to use the headings “Education” and “Projects” if you’re likely to stick with a one-page site. Set up Git and a GitHub repo. Commit and push. There are quite a few ways to do this (see Happy Git with R to GitHub with the help of the usethis package. In your console, run usethis::use_git() . You’ll be asked if it is okay to commit your uncommitted files. Read the options and enter the number for ‘Yes’. You’ll then be asked about restarting so the Git panel can be available. Choose to restart. If you configured your GitHub Personal Access Token (PAT) (see Chapter 10 of Happy Git with R: Cache credentials for HTTPS) you can run usethis::use_github() in your console to set up and push to a repo of the same name as the folder you set up (e.g. ‘task1’). You’ll be able to delete this later once your website has taken it’s final form. GitHub should open in your browser. If not, navigate to your GitHub repo for the site and go Settings (top horizontal menu) and then Pages (vertical menus on left) Under source, change from None to master (or main if that is what your branch is called) and change /(root) to /docs and click save. Make a change and repush to GitHub using the terminal tab! (Update the commit message.) Or use the Git pane, or however else you’ve learned to set yourself up. git status git add -A git commit -m &quot;look at this hopefully meaningful message&quot; git push 3.2.1.1 Example I made the ISSC a landing page. You can view it at https://uoft-doss-issc.github.io/ and the code is available on GitHub. 3.2.2 Multipage site Make sure you have installed packages you needed to. Create a new R project using the distill website template: ‘File -&gt; New Project -&gt; New Directory -&gt; Distill Website.’. Choose a sensible location for this project to live on your computer. I’d recommend just calling this something like ‘task2’ for now. Tick ‘Configure for GitHub pages’. Choose ‘Open in new session’, just to be safe. Navigate to the Build tab in the environment pane (usually the top right pane in your R Studio if you haven’t customized the layout) and click Build Website. This should create a pop-up that allows you to preview what the basic template builds. Open the index.Rmd file you made in task 1 and copy the entire thing into the index.Rmd file in your current project. Add this line to your YAML site: distill::distill_website for this newly transplanted index.Rmd. Doesn’t matter which line you put it on. Now we’re going to start by exploring the _site.yml file. This is how you’ll set up the navigation bar for your website. Start by updating the name, title and description. Only change the description on line 4 and keep the tab in front of the text. Wow, look at this creative example! name: &quot;lizawebsite&quot; title: &quot;Liza Bolton&quot; description: | Liza Bolton Next, let’s add links to any social media or other platforms you want to promote. Don’t link social media or platforms you wouldn’t be comfortable with an employer seeing (and probably make those accounts private). This example is for GitHub. You can also do Twitter (`fa-twitter`) and LinkedIn (`fa-linkedin`) and probably some others. - icon: fa fa-github href: https://github.com/elb0 Want to make it easy to email you? Add your email address and a email icon or cute paper plane icon (`fa-paper-plane`) to the navigation bar. Or you could add these as buttons under your picture if you’d prefer. - icon: fa fa-envelope href: mailto:liza.bolton@utoronto.ca Let’s create a Projects page. Run this code in your console: distill::create_article(\"projects\"). This will create a new Rmd call projects.Rmd. Update it, Knit it and then we’ll add it to the _site.yml and build the site again. Want a table of contents? Update your YAML. output: distill::distill_article: toc: true toc_depth: 3 Next, we’re going to create a CV page. You can either have your CV as a PDF and set it up to open directly or create a new page with your CV information. If you’re creating a page, you’ll do basically the same things as the step above. If you have a PDF of your CV, create a new folder called pdfs in your main file (you could call it something else too…) and put the PDF you want in there. Then we’ll add it to the navigation bar with: - text: &quot;CV&quot; href: pdfs/mycv.pdf (But update the file name.) 3.3 Other tips/resources Add .DS_Store to your .gitignore file (if you’re on a Mac). Here are the getting started notes from the distill team! This blog post from the RStudio team is a great feature summary for the distill package. Explore the Distillery Showcase of websites made with Distill! Some great inspiration here. 3.4 Setting up a custom domain It can take a while (like, a day or so) to update the redirection between your GitHub page and your domain, so be prepared to be patient! These instructions are quite good: https://richpauloo.github.io/2019-11-17-Linking-a-Custom-Domain-to-Github-Pages/ 3.5 Post-workshop tasks Check-in with yourself: What was fun about today? What did you learn? What did you find challenging? Did anything make you want to give up? If so, was why should you keep going with your website? Do a social media audit. What are you happy with being public and what is private to close friends/family, etc. Continue to update your bio, links. Make a site plan. What other pages would you like to add? Maybe a testimonials page? Start thinking about what colours you like and/or what colours would help communicate your personality. Currently your site will have a blue navigation bar, but we will learn some basic ways to change the look and feel in our next session. Add your website URL to your email signature, once you feel it is in an okay state of readiness. We’re also going to add more to it over the next few sessions so feel free to wait, too. "],["session-2-blogging-with-distill.html", "4 Session 2: Blogging with Distill", " 4 Session 2: Blogging with Distill More information coming soon. "],["session-3-content-development.html", "5 Session 3: Content development", " 5 Session 3: Content development More information coming soon. "],["domain.html", "A Buy a domain name (optional) A.1 But what if you don’t buy a domain name?", " A Buy a domain name (optional) You do not have to buy anything to build and host a professional personal website as a student. BUT, if you’ve always wanted to own www.firstnamelastname.com, here are some instructions. Note, if you’re not sure what a domain name is there are heaps of explainer articles online, just search “what is a domain name”. You don’t really need to know too much. A.0.1 Some caveats I’d recommend doing some of your own further research to make sure this is actually the best approach for you and what you actually want or need. This isn’t legal or financial advice. Duh. A.0.2 Don’t pay full price! There is almost always a deal going on. May not still be live when you’re looking, but ‘nameboy’ was a code for 25% of domains.com when I was setting up mine. A.1 But what if you don’t buy a domain name? If you don’t want to buy a domain name, your personal website’s address will appear as: your-github-username.github.io. Even more reason to choose a good username! See more in the prerequisite secion. For example, I made a simple landing page for the ISSC at https://uoft-doss-issc.github.io/. "]]
